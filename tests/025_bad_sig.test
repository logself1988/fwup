#!/bin/bash

#
# Test that applying firmware with the wrong public key fails
#

. ./common.sh

cat >$CONFIG <<EOF
file-resource TEST {
	host-path = "${TESTFILE_1K}"
}

task complete {
	on-resource TEST { raw_write(0) }
}
EOF

# Create new keys
pushd $WORK
$FWUP_CREATE -g
popd

# Sign the firmware
$FWUP_CREATE -s $WORK/fwup-key.priv -c -f $CONFIG -o $FWFILE

# Create new keys and try to use them instead of the first ones
# It should be insanely unlikely that we'll generate the same keys twice
pushd $WORK
$FWUP_CREATE -g
popd

# Check that applying the firmware with checking signatures fails
echo Expecting a failure from apply...
if $FWUP_APPLY -q -p $WORK/fwup-key.pub -a -d $IMGFILE -i $FWFILE -t complete; then
    echo A bad signature should have been detected
    exit 1
fi
echo Expecting error from verify...
if $FWUP_APPLY -V -p $WORK/fwup-key.pub -i $FWFILE; then
    echo A bad signature should have been detected
    exit 1
fi

echo Expecting error from list...
if $FWUP_APPLY -l -p $WORK/fwup-key.pub -i $FWFILE; then
    echo A bad signature should have been detected
    exit 1
fi

echo Expecting error from metadata...
if $FWUP_APPLY -m -p $WORK/fwup-key.pub -i $FWFILE; then
    echo A bad signature should have been detected
    exit 1
fi

cleanup
