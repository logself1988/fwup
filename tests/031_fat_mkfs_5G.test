#!/bin/bash

#
# Test creating a 5GB FAT partition to verify that LFS is enabled
# in the FAT code.
#

# No sparse file support on OSX, so skip
if [[ "$OSTYPE" == "darwin"* ]]; then
    exit 0
fi

# No sparse file support in Windows 10 bash mode, so skip it too
if [[ -d "/mnt/c/Users" ]]; then
    exit 0
fi

. ./common.sh

cat >$CONFIG <<EOF
define(BOOT_PART_OFFSET, 63)
define(BOOT_PART_COUNT, 9999990) # needs to be a multiple of 63 to make mtools happy

mbr mbr-a {
    partition 0 {
        block-offset = \${BOOT_PART_OFFSET}
        block-count = \${BOOT_PART_COUNT}
        type = 0xc # FAT32
        boot = true
    }
}
task complete {
	on-init {
                mbr_write(mbr-a)
                fat_mkfs(\${BOOT_PART_OFFSET}, \${BOOT_PART_COUNT})
        }
}
EOF

# Create the firmware file, then "burn it"
$FWUP_CREATE -c -f $CONFIG -o $FWFILE
$FWUP_APPLY -a -d $IMGFILE -i $FWFILE -t complete

# MTOOLS_SKIP_CHECK=1 can normally be used, but since this is
# the most fundamental of FAT checks, we're trying to leave it off.
mdir -i $WORK/fwup.img@@32256

cleanup
