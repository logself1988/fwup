#!/bin/bash

#
# Test writing to a 2 TB offset to check that >4G numbers can be
# used as offsets. This test shouldn't require
# 2 TB of disk space to run, since the file should be sparce.
#

# No sparse file support on OSX, so skip
if [[ "$OSTYPE" == "darwin"* ]]; then
    exit 0
fi

# No sparse file support in Windows 10 bash mode, so skip it too
if [[ -d "/mnt/c/Users" ]]; then
    exit 0
fi

# The Raspberry Pi doesn't support big files. This seems like it
# should work, but since this is an unlikely use case, disable the
# test for the Raspberry Pis and other 32-bit ARMs.
if [[ "$OSTYPE" == "linux-gnueabihf" ]]; then
    exit 0
fi

. ./common.sh

cat >$CONFIG <<EOF
file-resource subdir/TEST {
	host-path = "${TESTFILE_150K}"
}

task complete {
	on-resource subdir/TEST { raw_write(4300000000) }
}
EOF

# Create the firmware file, then "burn it"
$FWUP_CREATE -c -f $CONFIG -o $FWFILE
$FWUP_APPLY -a -d $IMGFILE -i $FWFILE -t complete

# The firmware file is equivalent to the following dd call
dd if=$TESTFILE_150K seek=4300000000 of=$WORK/check.bin conv=sync 2>/dev/null

# diffing the files takes too long, so skip to the end
# where the interesting stuff is
cmp $WORK/check.bin $IMGFILE 2200000000000 2200000000000

cleanup
