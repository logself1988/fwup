#!/bin/bash

#
# Test that writing a zero-length file truncates
#

. ./common.sh

EMPTY=$WORK/empty
touch $EMPTY

cat >$CONFIG <<EOF
define(BOOT_PART_OFFSET, 63)
define(BOOT_PART_COUNT, 77238)

file-resource 1K.bin {
	host-path = "${TESTFILE_1K}"
}
file-resource empty {
	host-path = "${EMPTY}"
}

mbr mbr-a {
    partition 0 {
        block-offset = \${BOOT_PART_OFFSET}
        block-count = \${BOOT_PART_COUNT}
        type = 0xc # FAT32
        boot = true
    }
}
task creates-file {
	on-init {
                mbr_write(mbr-a)
                fat_mkfs(\${BOOT_PART_OFFSET}, \${BOOT_PART_COUNT})
        }
        on-resource empty {
                fat_write(\${BOOT_PART_OFFSET}, "EMPTY")
        }
}
task truncates-file {
	on-init {
                mbr_write(mbr-a)
                fat_mkfs(\${BOOT_PART_OFFSET}, \${BOOT_PART_COUNT})
        }
        on-resource 1K.bin {
                fat_write(\${BOOT_PART_OFFSET}, "EMPTY")
        }
        on-resource empty {
                fat_write(\${BOOT_PART_OFFSET}, "EMPTY")
        }
}
EOF

# Create the firmware file, then "burn it"
# Force a timestamp since the FAT serial number depends
# on meta-creation-timestamp. This only needs to be done
# at the create stage since burning is always supposed to
# be bit for bit identical.
NOW="2015-05-05T18:10:16Z" $FWUP_CREATE -c -f $CONFIG -o $FWFILE

EXPECTED_OUTPUT=$WORK/expected.out
ACTUAL_OUTPUT=$WORK/actual.out

cat >$EXPECTED_OUTPUT << EOF
 Volume in drive : has no label
 Volume Serial Number is 46A5-9148
Directory for ::/

EMPTY                0 2015-05-05  18:10
        1 file                    0 bytes
                         38 910 464 bytes free

EOF

# Check that the file gets created if it's not there before
$FWUP_APPLY -a -d $IMGFILE -i $FWFILE -t creates-file
mdir -i $WORK/fwup.img@@32256 > $ACTUAL_OUTPUT
diff -w $EXPECTED_OUTPUT $ACTUAL_OUTPUT

# Check that the file gets truncated if it exists
$FWUP_APPLY -a -d $IMGFILE -i $FWFILE -t truncates-file
mdir -i $WORK/fwup.img@@32256 > $ACTUAL_OUTPUT
diff -w $EXPECTED_OUTPUT $ACTUAL_OUTPUT

cleanup
