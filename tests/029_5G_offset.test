#!/bin/bash

#
# Test writing to a 5 GB offset. This test shouldn't require
# 5 GB of disk space to run, since the file should be sparce.
# This tests whether basic large file support is enabled
# internally.
#

# No sparse file support on OSX, so skip
if [[ "$OSTYPE" == "darwin"* ]]; then
    exit 0
fi

# No sparse file support in Windows 10 bash mode, so skip it too
if [[ -d "/mnt/c/Users" ]]; then
    exit 0
fi

. ./common.sh

cat >$CONFIG <<EOF
file-resource subdir/TEST {
	host-path = "${TESTFILE_150K}"
}

task complete {
	on-resource subdir/TEST { raw_write(10485760) }
}
EOF

# Create the firmware file, then "burn it"
$FWUP_CREATE -c -f $CONFIG -o $FWFILE
$FWUP_APPLY -a -d $IMGFILE -i $FWFILE -t complete

# The firmware file is equivalent to the following dd call
dd if=$TESTFILE_150K seek=10485760 of=$WORK/check.bin conv=sync 2>/dev/null
diff $WORK/check.bin $IMGFILE

cleanup
